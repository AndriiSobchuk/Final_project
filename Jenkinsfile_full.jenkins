pipeline {
  environment {
    dockerimagename = "andriisobchuk/python-app"
    dockerImage = ""
  }
    agent {
    kubernetes { 
        yaml ''' 
    apiVersion: v1
    kind: Pod
    spec:
     containers:    
     - name: docker
       image: docker:19.03.1-dind
       securityContext:
         privileged: true  
        '''
      defaultContainer 'docker'
    }
  }
   triggers {
        pollSCM('* * * * *')
    }

    stages {
        stage('git') {
            steps {
                git branch: 'main', url: 'https://github.com/AndriiSobchuk/python-app.git'
            }
    }
    stage('Build image') {
      steps{
        script {
          dockerImage = docker.build dockerimagename
        }
      }
    }
    stage('Pushing Image') {
      environment {
               registryCredential = 'dockerhub'
           }
      steps{
        script {
          docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
            dockerImage.push("latest")
            dockerImage.push("release.${env.BUILD_ID}")
           
          }
        }
      }
    }
    stage ('Edit version') {
        steps {
         sh "sed -i 's/latest/release.${env.BUILD_ID}/g' python-app-rolling-hpa.yml"
        }
    }
    
    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "python-app-rolling-hpa.yml", kubeconfigId: "kubernetes")
        }
      }
    }
 }
}
